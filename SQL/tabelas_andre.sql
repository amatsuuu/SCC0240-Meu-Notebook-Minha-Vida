CREATE TABLE SALA (
    BLOCO NUMBER(1) NOT NULL,
    ANDAR NUMBER(1) NOT NULL,
    NUMERO NUMBER(2) NOT NULL,

    CONSTRAINT PK_SALA   PRIMARY KEY (BLOCO, ANDAR, NUMERO),
    CONSTRAINT CK_BLOCO  CHECK (BLOCO BETWEEN 1 AND 8),
    CONSTRAINT CK_ANDAR  CHECK (ANDAR BETWEEN 0 AND 3),
    CONSTRAINT CK_NUMERO CHECK (NUMERO BETWEEN 1 AND 3)
);

CREATE TABLE TURMA (
    ID NUMBER(1) NOT NULL,
    LINGUAGEM VARCHAR2(20) NOT NULL,
    ANO NUMBER NOT NULL,
    SEMESTRE CHAR(1) NOT NULL,
    NUMERO_TURMA NUMBER(1) NOT NULL,
    QTD_ALUNOS NUMBER(2),
    BLOCO  NUMBER(1) NOT NULL,
    ANDAR  NUMBER(1) NOT NULL,
    NUMERO NUMBER(2) NOT NULL,

    CONSTRAINT PK_TURMA PRIMARY KEY (ID),
    CONSTRAINT FK1_TURMA FOREIGN KEY (BLOCO, ANDAR, NUMERO) REFERENCES SALA(BLOCO, ANDAR, NUMERO) ON DELETE CASCADE,
    UNIQUE (LINGUAGEM, ANO, SEMESTRE, NUMERO_TURMA),
    CONSTRAINT CK_NUMERO_TURMA CHECK (NUMERO_TURMA > 0),
    CONSTRAINT CK_QTD_ALUNOS CHECK (QTD_ALUNOS > 0)
);

CREATE TABLE ALUNO_PERT_TURMA (
    ID NUMBER(1) NOT NULL,
    ALUNO CHAR(14) NOT NULL,

    CONSTRAINT PK_ALUNO_PERT_TURMA PRIMARY KEY (ID, ALUNO),
    CONSTRAINT FK1_ALUNO_PERT_TURMA FOREIGN KEY (ID) REFERENCES TURMA(ID) ON DELETE CASCADE,
    CONSTRAINT FK2_ALUNO_PERT_TURMA FOREIGN KEY (ALUNO) REFERENCES ALUNO(CPF) ON DELETE CASCADE
);

CREATE TABLE AULA (
    TURMA NUMBER(1) NOT NULL,
    DATA DATE NOT NULL,
    DIA_SEMANA VARCHAR2(7),
    HORA VARCHAR2(5),
    TEMA VARCHAR2(20),
    DESCRICAO VARCHAR2(50),

    CONSTRAINT PK_AULA  PRIMARY KEY (TURMA, DATA),
    CONSTRAINT FK1_AULA FOREIGN KEY (ID) REFERENCES TURMA(ID) ON DELETE CASCADE,
    CONSTRAINT CK_DIA_SEMANA CHECK (UPPER(DIA_SEMANA) IN ('SEGUNDA', 'TERCA', 'QUARTA', 'QUINTA', 'SEXTA', 'SABADO', 'DOMINGO')),
    CONSTRAINT CK_HORA CHECK (REGEXP_LIKE(HORA, '[:digit:]{1,2}\:[:digit:]{1,2}'))
);

-- Trigger para inser��o autom�tica do ID
CREATE SEQUENCE id_turma
    START WITH 1;

CREATE OR REPLACE TRIGGER incremento
    BEFORE INSERT ON TURMA
    FOR EACH ROW
BEGIN
    SELECT id_turma.NEXTVAL
    INTO :new.ID
    FROM DUAL;
END;
/

-- INSERTS
INSERT INTO SALA VALUES (1, 1, 1);
INSERT INTO SALA VALUES (2, 2, 2);
INSERT INTO TURMA(LINGUAGEM, ANO, SEMESTRE, NUMERO_TURMA, QTD_ALUNOS, BLOCO, ANDAR, NUMERO)
    VALUES ('PYTHON', 2023, '1', 1, 1, 1, 1, 1);
INSERT INTO TURMA(LINGUAGEM, ANO, SEMESTRE, NUMERO_TURMA, QTD_ALUNOS, BLOCO, ANDAR, NUMERO)
    VALUES ('JAVASCRIPT', 2021, '2', 2, 2, 2, 2, 2);